package components

// TODO: Implement FormField component
//
// FormField should render a complete form input with label, input, and error message.
// Based on DaisyUI form-control component.
//
// Use cases:
// 1. Feed form fields (name, URL)
// 2. Login/Register forms
// 3. Search inputs
// 4. Any form with validation
//
// Features:
// - Label with optional required indicator
// - Input with various types (text, url, email, password, etc.)
// - Error message display
// - Helper text support
// - Consistent styling across all forms
//
// Proposed structure:
//
// type FormFieldProps struct {
//     Label       string
//     Name        string
//     Type        string  // "text", "url", "email", "password", "textarea"
//     Value       string
//     Placeholder string
//     Error       string  // validation error message
//     Helper      string  // helper text below input
//     Required    bool
//     Disabled    bool
//     Rows        int     // for textarea
// }
//
// Example usage:
// @components.FormField(components.FormFieldProps{
//     Label: "Feed URL",
//     Name: "url",
//     Type: "url",
//     Value: "https://example.com/feed",
//     Placeholder: "https://example.com/rss",
//     Error: "Invalid URL format",
//     Required: true,
// })
//
// Renders:
// <label class="form-control w-full">
//     <div class="label">
//         <span class="label-text">Feed URL <span class="text-error">*</span></span>
//     </div>
//     <input type="url" name="url" value="..." class="input input-bordered input-error" />
//     <div class="label">
//         <span class="label-text-alt text-error">Invalid URL format</span>
//     </div>
// </label>

// FormField is a placeholder component. Implementation pending.
// TODO: Implement full FormField component based on comments above.
templ FormField() {
	<label class="form-control">
		<input type="text" class="input input-bordered" placeholder="FormField - to be implemented"/>
	</label>
}
