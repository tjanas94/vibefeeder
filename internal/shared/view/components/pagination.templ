package components

import (
	"fmt"

	"github.com/tjanas94/vibefeeder/internal/shared/models"
)

// Pagination renders pagination controls for navigating through paged results
// Integrates with htmx for dynamic page loading
// Uses hx-include to send form inputs (search, status) with pagination requests
templ Pagination(props PaginationProps) {
	<nav class="flex justify-center mt-6" aria-label="Pagination">
		<div class="join" role="group">
			<!-- Previous Button -->
			if props.Pagination.HasPrevious {
				<button
					class="join-item btn relative"
					hx-get={ models.BuildPageURL(props.BaseURL, props.Pagination.CurrentPage-1) }
					hx-target="#feed-list"
					hx-include={ props.FormID }
					aria-label={ fmt.Sprintf("Go to previous page %d", props.Pagination.CurrentPage-1) }
				>
					<span class="absolute -left-2 top-1/2 -translate-y-1/2">
						@ButtonLoader(ButtonLoaderProps{Size: "sm"})
					</span>
					<span aria-hidden="true">«</span>
				</button>
			} else {
				<button class="join-item btn btn-disabled" disabled aria-label="Previous page unavailable">
					<span aria-hidden="true">«</span>
				</button>
			}
			<!-- Page Numbers -->
			for _, pageNum := range models.GetPaginationRange(props.Pagination.CurrentPage, props.Pagination.TotalPages) {
				if pageNum == -1 {
					<!-- Ellipsis -->
					<button class="join-item btn btn-disabled" disabled aria-label="More pages">
						<span aria-hidden="true">...</span>
					</button>
				} else if pageNum == props.Pagination.CurrentPage {
					<!-- Current Page -->
					<button class="join-item btn btn-active" aria-current="page" aria-label={ fmt.Sprintf("Page %d, current page", pageNum) }>
						{ fmt.Sprintf("%d", pageNum) }
					</button>
				} else {
					<!-- Other Pages -->
					<button
						class="join-item btn relative"
						hx-get={ models.BuildPageURL(props.BaseURL, pageNum) }
						hx-target="#feed-list"
						hx-include={ props.FormID }
						aria-label={ fmt.Sprintf("Go to page %d", pageNum) }
					>
						<span class="absolute -left-3 top-1/2 -translate-y-1/2">
							@ButtonLoader(ButtonLoaderProps{Size: "sm"})
						</span>
						{ fmt.Sprintf("%d", pageNum) }
					</button>
				}
			}
			<!-- Next Button -->
			if props.Pagination.HasNext {
				<button
					class="join-item btn relative"
					hx-get={ models.BuildPageURL(props.BaseURL, props.Pagination.CurrentPage+1) }
					hx-target="#feed-list"
					hx-include={ props.FormID }
					aria-label={ fmt.Sprintf("Go to next page %d", props.Pagination.CurrentPage+1) }
				>
					<span class="absolute -left-2 top-1/2 -translate-y-1/2">
						@ButtonLoader(ButtonLoaderProps{Size: "sm"})
					</span>
					<span aria-hidden="true">»</span>
				</button>
			} else {
				<button class="join-item btn btn-disabled" disabled aria-label="Next page unavailable">
					<span aria-hidden="true">»</span>
				</button>
			}
		</div>
	</nav>
}
