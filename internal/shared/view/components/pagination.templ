package components

import (
	"fmt"

	"github.com/tjanas94/vibefeeder/internal/shared/models"
)

// Pagination renders pagination controls for navigating through paged results
// Integrates with htmx for dynamic page loading
// Uses hx-include to send form inputs (search, status) with pagination requests
templ Pagination(props PaginationProps) {
	<div class="join">
		<!-- Previous Button -->
		if props.Pagination.HasPrevious {
			<button
				class="join-item btn"
				hx-get={ models.BuildPageURL(props.BaseURL, props.Pagination.CurrentPage-1) }
				hx-target="#feed-list"
				hx-include={ props.FormID }
			>
				«
			</button>
		} else {
			<button class="join-item btn btn-disabled" disabled>«</button>
		}
		<!-- Page Numbers -->
		for _, pageNum := range models.GetPaginationRange(props.Pagination.CurrentPage, props.Pagination.TotalPages) {
			if pageNum == -1 {
				<!-- Ellipsis -->
				<button class="join-item btn btn-disabled" disabled>...</button>
			} else if pageNum == props.Pagination.CurrentPage {
				<!-- Current Page -->
				<button class="join-item btn btn-active">{ fmt.Sprintf("%d", pageNum) }</button>
			} else {
				<!-- Other Pages -->
				<button
					class="join-item btn"
					hx-get={ models.BuildPageURL(props.BaseURL, pageNum) }
					hx-target="#feed-list"
					hx-include={ props.FormID }
				>
					{ fmt.Sprintf("%d", pageNum) }
				</button>
			}
		}
		<!-- Next Button -->
		if props.Pagination.HasNext {
			<button
				class="join-item btn"
				hx-get={ models.BuildPageURL(props.BaseURL, props.Pagination.CurrentPage+1) }
				hx-target="#feed-list"
				hx-include={ props.FormID }
			>
				»
			</button>
		} else {
			<button class="join-item btn btn-disabled" disabled>»</button>
		}
	</div>
}
