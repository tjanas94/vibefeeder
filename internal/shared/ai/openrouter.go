package ai

import (
	"context"
	"fmt"
)

// OpenRouterClient is a mock implementation of AI client for OpenRouter.ai
// This is a temporary mock until we integrate the real API
type OpenRouterClient struct {
	apiKey string
}

// NewOpenRouterClient creates a new OpenRouter AI client
func NewOpenRouterClient(apiKey string) *OpenRouterClient {
	return &OpenRouterClient{
		apiKey: apiKey,
	}
}

// GenerateSummary generates a summary from the given prompt (mock implementation)
func (c *OpenRouterClient) GenerateSummary(ctx context.Context, prompt string) (string, error) {
	// Mock response for testing
	mockSummary := fmt.Sprintf(
		"[MOCK AI SUMMARY]\n\n"+
			"This is a mock AI-generated summary. "+
			"In production, this would be a real summary generated by OpenRouter.ai.\n\n"+
			"Prompt received (%d characters):\n%s",
		len(prompt),
		truncateString(prompt, 200),
	)

	return mockSummary, nil
}

// truncateString truncates a string to maxLen characters with ellipsis
func truncateString(s string, maxLen int) string {
	if len(s) <= maxLen {
		return s
	}
	return s[:maxLen] + "..."
}
