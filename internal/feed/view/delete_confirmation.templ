package view

import (
	"fmt"
	"github.com/tjanas94/vibefeeder/internal/feed/models"
	"github.com/tjanas94/vibefeeder/internal/shared/csrf"
	"github.com/tjanas94/vibefeeder/internal/shared/view/components"
)

// DeleteConfirmation renders the delete confirmation dialog content.
// Takes feed data from server-side view model instead of Alpine.js state.
templ DeleteConfirmation(vm models.DeleteConfirmationViewModel) {
	<h3 id="delete-confirmation-modal-title" class="font-bold text-lg mb-4">Confirm deletion</h3>
	<article class="space-y-4" role="alertdialog" aria-labelledby="delete-confirmation-modal-title" aria-describedby="delete-description" data-testid="delete-confirmation">
		<!-- Warning Message -->
		<div>
			@components.Alert(components.AlertProps{
				Type:     "warning",
				ShowIcon: true,
			}) {
				<div>
					<p class="font-semibold">Are you sure you want to delete this feed?</p>
					<p class="text-sm" data-testid={ fmt.Sprintf("delete-confirmation-feed-name-%s", vm.FeedID) }>
						Feed: <span class="font-medium">{ vm.FeedName }</span>
					</p>
				</div>
			}
		</div>
		<!-- Additional Warning -->
		<p id="delete-description" class="text-sm text-base-content/70">
			This action cannot be undone. All articles from this feed will also be deleted.
		</p>
		<!-- Error Display -->
		if vm.ErrorMessage != "" {
			<div role="alert" aria-live="assertive" aria-atomic="true" data-testid="delete-confirmation-error">
				@components.Alert(components.AlertProps{
					Type:     "error",
					ShowIcon: true,
				}) {
					vm.ErrorMessage
				}
			</div>
		}
		<!-- Action Buttons -->
		<footer class="flex gap-2 justify-end">
			<button
				type="button"
				class="btn btn-ghost focus:outline focus:outline-2 focus:outline-offset-2"
				@click="window.dispatchEvent(new CustomEvent('close-modal'))"
				aria-label="Cancel deletion and close the dialog"
				data-testid="delete-confirmation-cancel-btn"
			>
				Cancel
			</button>
			<button
				type="button"
				class="btn btn-error inline-flex items-center gap-2"
				hx-delete={ fmt.Sprintf("/feeds/%s", vm.FeedID) }
				hx-headers={ fmt.Sprintf(`{"X-CSRF-Token": "%s"}`, csrf.Token(ctx)) }
				hx-target="#delete-confirmation-modal-content"
				hx-swap="innerHTML"
				aria-label={ fmt.Sprintf("Confirm deletion of feed %s", vm.FeedName) }
				data-testid={ fmt.Sprintf("delete-confirmation-confirm-btn-%s", vm.FeedID) }
			>
				@components.ButtonLoader(components.ButtonLoaderProps{})
				<span>Delete feed</span>
			</button>
		</footer>
	</article>
}
